<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DM.MovieApi</name>
    </assembly>
    <members>
        <member name="T:DM.MovieApi.ApiRequest.IApiRequest">
            <summary>
            Interface to provide a constraint for all MovieDb Api Request interfaces/classes.
            </summary>
        </member>
        <member name="T:DM.MovieApi.ApiRequest.IsoDateTimeConverterEx">
            <summary>
            Extends the native Newtonsoft IsoDateTimeConverter to allow deserializing parital dates.
            </summary>
        </member>
        <member name="M:DM.MovieApi.ApiRequest.IsoDateTimeConverterEx.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Reads the JSON representation of the object.
            </summary>
            <param name="reader">The Newtonsoft.Json.JsonReader to read from.</param>
            <param name="objectType">Type of the object.</param>
            <param name="existingValue">The existing value of object being read.</param>
            <param name="serializer">The calling serializer.</param>
            <returns>The object value.</returns>
        </member>
        <member name="T:DM.MovieApi.ApiResponse.ApiQueryResponse`1">
            <summary>
            Standard response from an API call returning a single specific result.
            Multiple item based based results (i.e., searches) are returned with an <see cref="T:DM.MovieApi.ApiResponse.ApiQueryResponse`1"/>.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiQueryResponse`1.Item">
            <summary>
            The item returned from the API call.
            </summary>
        </member>
        <member name="T:DM.MovieApi.ApiResponse.ApiResponseBase">
            <summary>
            Base class for all API responses from themoviedb.org.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiResponseBase.Error">
            <summary>
            Contains specific error information if an error was encountered during the API call to themoviedb.org.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiResponseBase.RateLimit">
            <summary>
            Contains the current rate limits from your most recent API call to themoviedb.org.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiResponseBase.CommandText">
            <summary>
            The API command text used for the API call to themoviedb.org.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiResponseBase.Json">
            <summary>
            The JSON returned from themoviedb.org based on the <see cref="P:DM.MovieApi.ApiResponse.ApiResponseBase.CommandText"/> query.
            </summary>
        </member>
        <member name="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1">
            <summary>
            Standard response from an API call returning a more than one result, i.e., a Search Result.
            Single item based results are returned with an 
            <see cref="T:DM.MovieApi.ApiResponse.ApiQueryResponse`1"/>.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiSearchResponse`1.Results">
            <summary>
            The list of results from the search.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiSearchResponse`1.PageNumber">
            <summary>
            The current page number of the search result.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiSearchResponse`1.TotalPages">
            <summary>
            The total number of pages found from the search result.
            </summary>
        </member>
        <member name="P:DM.MovieApi.ApiResponse.ApiSearchResponse`1.TotalResults">
            <summary>
            The total number of results from the search.
            </summary>
        </member>
        <member name="T:DM.MovieApi.ApiResponse.TmdbStatusCode">
            <summary>
            themoviedb.org Status Codes as defined by: https://www.themoviedb.org/documentation/api/status-codes
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.Success">
            <summary>
            200: Success.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidService">
            <summary>
            501: Invalid service: this service does not exist.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InsufficientPermissions">
            <summary>
            401: Authentication failed: You do not have permissions to access the service.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidFormat">
            <summary>
            405: Invalid format: This service doesn't exist in that format.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidParameters">
            <summary>
            422: Invalid parameters: Your request parameters are incorrect.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidId">
            <summary>
            404: Invalid id: The pre-requisite id is invalid or not found.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidApiKey">
            <summary>
            401: Invalid API key: You must be granted a valid key.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.DuplicateEntry">
            <summary>
            403: Duplicate entry: The data you tried to submit already exists.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.ServiceOffline">
            <summary>
            503: Service offline: This service is temporarily offline, try again later.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.SuspendedApiKey">
            <summary>
            503: Service offline: This service is temporarily offline, try again later.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InternalError">
            <summary>
            503: Service offline: This service is temporarily offline, try again later.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.SuccessfulUpdate">
            <summary>
            201: The item/record was updated successfully.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.SuccessfulDelete">
            <summary>
            200: The item/record was deleted successfully.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.AuthenticationFailed">
            <summary>
            401: Authentication failed.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.Failed">
            <summary>
            500: Failed.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.DeviceDenied">
            <summary>
            401: Device denied.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.SessionDenied">
            <summary>
            401: Session denied.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.ValidationFailed">
            <summary>
            400: Validation failed.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidAcceptHeader">
            <summary>
            406: Invalid accept header.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidDateRange">
            <summary>
            422: Invalid date range: Should be a range no longer than 14 days.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.EntryNotFound">
            <summary>
            200: Entry not found: The item you are trying to edit cannot be found.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidPage">
            <summary>
            400: Invalid page: Pages start at 1 and max at 1000. They are expected to be an integer.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidDate">
            <summary>
            400: Invalid date: Format needs to be YYYY-MM-DD.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.ServerTimeout">
            <summary>
            400: Invalid date: Format needs to be YYYY-MM-DD.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.RequestOverLimit">
            <summary>
            400: Invalid date: Format needs to be YYYY-MM-DD.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.AuthenticationRequired">
            <summary>
            "400: You must provide a username and password.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.ResponseObjectOverflow">
            <summary>
            400: Too many append to response objects: The maximum number of remote calls is 20.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidTimezone">
            <summary>
            400: Invalid timezone: Please consult the documentation for a valid timezone.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.ActionMustBeConfirmed">
            <summary>
            400: Invalid timezone: Please consult the documentation for a valid timezone.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidAuthentication">
            <summary>
            401: Invalid username and/or password: You did not provide a valid login.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.AccountDisabled">
            <summary>
            401: Account disabled: Your account is no longer active. Contact TMDb if this is an error.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.EmailNotVerified">
            <summary>
            401: Email not verified: Your email address has not been verified.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.InvalidRequestToken">
            <summary>
            401: Invalid request token: The request token is either expired or invalid.
            </summary>
        </member>
        <member name="F:DM.MovieApi.ApiResponse.TmdbStatusCode.ResourceNotFound">
            <summary>
            401: The resource you requested could not be found.
            </summary>
        </member>
        <member name="T:DM.MovieApi.IMovieDbApi">
            <summary>
            Global interface exposing all API interfaces against themoviedb.org that are
            currently available in this release.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.Companies">
            <summary>
            Provides access for retrieving production company information.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.Configuration">
            <summary>
            Provides access for retrieving themoviedb.org configuration information.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.Genres">
            <summary>
            Provides access for retrieving Movie and TV genres.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.IndustryProfessions">
            <summary>
            Provides access for retrieving information about Movie/TV industry specific professions.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.Movies">
            <summary>
            Provides access for retrieving information about Movies.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.MovieRatings">
            <summary>
            Provides access for retrieving movie rating information.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.Television">
            <summary>
            Provides access for retrieving information about Television shows.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbApi.People">
            <summary>
            Provides access for retreiving information about People.
            </summary>
        </member>
        <member name="T:DM.MovieApi.IMovieDbSettings">
            <summary>
            <para>Interface consumers must implement to acccess any of the API's exposed against themoviedb.org.</para>
            <para>The concrete implementation can be used with <see cref="T:DM.MovieApi.MovieDbFactory"/> to register your specific settings.</para>
            <para>Alternatively, you can use MEF to expose your settings and import as needed. See our online documentation for more information.</para>
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbSettings.ApiKey">
            <summary>
            Private key required to query themoviedb.org API.
            </summary>
        </member>
        <member name="P:DM.MovieApi.IMovieDbSettings.ApiUrl">
            <summary>
            <para>URL used for api calls to themoviedb.org.</para>
            <para>Current URL is: http://api.themoviedb.org/3/ </para>
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDbFactory">
            <summary>
            Note: one of the RegisterSettings must be called before the Factory can Create anything.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDbFactory.IsFactoryComposed">
            <summary>
            Determines if the underlying factory has been created.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDbFactory.RegisterSettings(DM.MovieApi.IMovieDbSettings)">
            <summary>
            Registers themoviedb.org settings for use with the MEF container.
            </summary>
            <param name="settings">The implementation of <see cref="T:DM.MovieApi.IMovieDbSettings"/> containing
            the themoviedb.org credentials to use when connecting to the service.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDbFactory.RegisterSettings(System.String,System.String)">
            <summary>
            Registers themoviedb.org settings for use with the MEF container.
            </summary>
            <param name="apiKey">Private key required to query themoviedb.org API.</param>
            <param name="apiUrl">URL used for api calls to themoviedb.org.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDbFactory.Create``1">
            <summary>
            <para>Creates the specific API requested.</para>
            <para>Note: one of the RegisterSettings must be called before the Factory can Create anything.</para>
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDbFactory.GetAllApiRequests">
            <summary>
            <para>Creates a global instance exposing all API interfaces against themoviedb.org
            that are currently available in this release. Each API is exposed via a Lazy property
            ensuring no objects are created until they are needed.</para>
            <para>Note: RegisterSettings must be called before the Factory can Create anything.</para>
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDbFactory.ResetFactory">
            <summary>
            Clears all factory settings; forces the next call to be RegisterSettings.
            before <see cref="M:DM.MovieApi.MovieDbFactory.Create``1"/> can be called.
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDb.Certifications.IApiMovieRatingRequest">
            <summary>
            Interface for retrieving movie rating information.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Certifications.IApiMovieRatingRequest.GetMovieRatingsAsync">
            <summary>
            Gets the list of supported certifications (movie ratings) for movies.
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDb.Companies.IApiCompanyRequest">
            <summary>
            Interface for retrieving information about a production company.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Companies.IApiCompanyRequest.FindByIdAsync(System.Int32)">
            <summary>
            Gets all the basic information about a specific company.
            </summary>
            <param name="companyId">The company Id is typically found from a Movie or TV query.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Companies.IApiCompanyRequest.GetMoviesAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Get the list of movies associated with a particular company.
            </summary>
            <param name="companyId">The company Id is typically found from a Movie or TV query.</param>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
            <returns></returns>
        </member>
        <member name="T:DM.MovieApi.MovieDb.Configuration.IApiConfigurationRequest">
            <summary>
            Interface for retrieving themoviedb.org configuration information.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Configuration.IApiConfigurationRequest.GetAsync">
            <summary>
            <para>Get themoviedb.org system wide configuration information. Some elements of themoviedb.org
            API require knowledge of the configuration data. The purpose of the <see cref="T:DM.MovieApi.MovieDb.Configuration.ApiConfiguration"/>
            is to try and keep the actual API responses as light as possible.</para>
            <para>It is recommended you cache this data within your application and check for updates every few days.
            This method currently holds the data relevant to building image URLs as well as the change key map.</para>
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDb.Genres.IApiGenreRequest">
            <summary>
            Interface representing Movie and TV genres.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.AllGenres">
            <summary>
            Provides a cache of all the genres (language='en') returned from <see cref="M:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.GetAllAsync(System.String)"/>.
            As the Genres do not change much, if any, the cache is never evicted.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.FindByIdAsync(System.Int32,System.String)">
            <summary>
            Gets all the information about a specific Genre.
            </summary>
            <param name="genreId">The genre Id is typically found from a more generic Movie or TV query.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.GetAllAsync(System.String)">
            <summary>
            <para>It is recommended to use the <see cref="P:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.AllGenres"/> property, unless a
            language specific parameter other than 'en' is provided.</para>
            <para>
            themoviedb.org api mixes tv and movie genres into their movies and tv titles.
            Use this method to ensure all genres are accounted for when attempting to join
            on Genre.Id from a search result; by default, search results only contain genre
            id and excludes the name.
            </para>
            <para>
            In some rare cases, a genre is not included in the movie or tv genres list; when this
            occurs, use the <see cref="M:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.FindByIdAsync(System.Int32,System.String)"/> method to find a matching genre.
            </para>
            </summary>
            <returns>The merged set of Movie and TV Genres.</returns>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.GetMoviesAsync(System.String)">
            <summary>
            Gets all movie related Genres.
            </summary>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.GetTelevisionAsync(System.String)">
            <summary>
            Gets all tv related Genres.
            </summary>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Genres.IApiGenreRequest.FindMoviesByIdAsync(System.Int32,System.Int32,System.String)">
            <summary>
            Finds all movies related to a genre, where the Id passed to this method is a genere Id, not a movie Id.
            </summary>
            <param name="genreId">The genre Id is typically found through from a related Movie request or from any of the Genre API methods.</param>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="T:DM.MovieApi.MovieDb.IndustryProfessions.IApiProfessionRequest">
            <summary>
            Interface for retrieving information about Movie/TV industry specific professions.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.IndustryProfessions.IApiProfessionRequest.GetAllAsync">
            <summary>
            Gets all the Movie/TV industry specific professions.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.Keywords.Keyword.Id">
            <summary>
            The keyword Id as identified by theMovieDB.org.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.Keywords.Keyword.Name">
            <summary>
            The keyword.
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDb.Keywords.KeywordConverter">
            <summary>
            Expected parent json node is "keywords". The child node is variable
            and should be set as a parameter to the JsonConverter attribute which
            will use the KeywordConverter .ctor to create the converter with the
            provided parameter.
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDb.Movies.IApiMovieRequest">
            <summary>
            Interface for retrieving information about Movies.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.FindByIdAsync(System.Int32,System.String)">
            <summary>
            Gets all the information about a specific Movie.
            </summary>
            <param name="movieId">The movie Id is typically found from a more generic Movie query.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.SearchByTitleAsync(System.String,System.Int32,System.String)">
            <summary>
            Searches for Movies by title.
            </summary>
            <param name="query">The query to search for Movies.</param>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.GetLatestAsync(System.String)">
            <summary>
            Gets the most recent movie that has been added to TheMovieDb.org.
            </summary>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.GetNowPlayingAsync(System.Int32,System.String)">
            <summary>
            Gets the list of movies playing that have been, or are being released this week.
            </summary>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.GetUpcomingAsync(System.Int32,System.String)">
            <summary>
            Gets the list of upcoming movies by release date.
            </summary>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.GetTopRatedAsync(System.Int32,System.String)">
            <summary>
            Gets the list of top rated movies which is refreshed daily.
            </summary>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.GetPopularAsync(System.Int32,System.String)">
            <summary>
            Gets the list of popular movies which is refreshed daily.
            </summary>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.Movies.IApiMovieRequest.GetCreditsAsync(System.Int32,System.String)">
            <summary>
            Get the cast and crew information for a specific movie id.
            </summary>
            <param name="movieId">The movie Id is typically found from a more generic Movie query.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="P:DM.MovieApi.MovieDb.Movies.Movie.OriginalLanguage">
            <summary>
            ISO 3166-1 code.
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDb.People.IApiPeopleRequest">
            <summary>
            Interface for retrieving information about People.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.People.IApiPeopleRequest.FindByIdAsync(System.Int32,System.String)">
            <summary>
            Gets all the information about a specific Person.
            </summary>
            <param name="personId">The person Id is typically found from a more generic query such as movie or television or search.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.People.IApiPeopleRequest.SearchByNameAsync(System.String,System.Int32,System.String)">
            <summary>
            Searches for People by name.
            </summary>
            <param name="query">The query to search for People.</param>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.People.IApiPeopleRequest.GetMovieCreditsAsync(System.Int32,System.String)">
            <summary>
            Get the movie credits for a specific person id. Includes movie cast and crew information for the person.
            </summary>
            <param name="personId">The person Id is typically found from a more generic query such as movie or television or search.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.People.IApiPeopleRequest.GetTVCreditsAsync(System.Int32,System.String)">
            <summary>
            Get the television credits for a specific person id. Includes TV cast and crew information for the person.
            </summary>
            <param name="personId">The person Id is typically found from a more generic query such as movie or television or search.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="P:DM.MovieApi.MovieDb.People.PersonInfoRole.Id">
            <summary>
            The MovieId or TVShowId as defined by the value of <see cref="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MediaType"/>.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.People.PersonInfoRole.TVShowName">
            <summary>
            Only populated when <see cref="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MediaType"/> is TV.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.People.PersonInfoRole.TVShowOriginalName">
            <summary>
            Only populated when <see cref="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MediaType"/> is TV.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MovieTitle">
            <summary>
            Only populated when <see cref="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MediaType"/> is Movie.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MovieOriginalTitle">
            <summary>
            Only populated when <see cref="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MediaType"/> is Movie.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MovieReleaseDate">
            <summary>
            Only populated when <see cref="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MediaType"/> is Movie.
            </summary>
        </member>
        <member name="P:DM.MovieApi.MovieDb.People.PersonInfoRole.TVShowFirstAirDate">
            <summary>
            Only populated when <see cref="P:DM.MovieApi.MovieDb.People.PersonInfoRole.MediaType"/> is TV.
            </summary>
        </member>
        <member name="T:DM.MovieApi.MovieDb.TV.IApiTVShowRequest">
            <summary>
            Interface for retrieving information about TV shows.
            </summary>
        </member>
        <member name="M:DM.MovieApi.MovieDb.TV.IApiTVShowRequest.FindByIdAsync(System.Int32,System.String)">
            <summary>
            Gets all the information about a specific TV show.
            </summary>
            <param name="tvShowId">The TV show Id which is typically found from a more generic TV show query.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.TV.IApiTVShowRequest.SearchByNameAsync(System.String,System.Int32,System.String)">
            <summary>
            Searches for TV shows by title.
            </summary>
            <param name="query">The query to search for TV shows.</param>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.TV.IApiTVShowRequest.GetLatestAsync(System.String)">
            <summary>
            Gets the latest TV show added to TheMovieDb.org
            </summary>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.TV.IApiTVShowRequest.GetTopRatedAsync(System.Int32,System.String)">
            <summary>
            Gets the list of top rated TV shows which is refreshed daily.
            </summary>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
        <member name="M:DM.MovieApi.MovieDb.TV.IApiTVShowRequest.GetPopularAsync(System.Int32,System.String)">
            <summary>
            Gets the list of popular TV shows which is refreshed daily.
            </summary>
            <param name="pageNumber">Default is page 1. The page number to retrieve; the <see cref="T:DM.MovieApi.ApiResponse.ApiSearchResponse`1"/> will contain the current page returned and the total number of pages available.</param>
            <param name="language">Default is English. The ISO 639-1 language code to retrieve the result from.</param>
        </member>
    </members>
</doc>
